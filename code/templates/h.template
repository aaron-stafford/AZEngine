// ${PREAMBLE_START}
// ${PREAMBLE_END}

#ifndef __${CLASS_NAME}__
#define __${CLASS_NAME}__

#ifdef STATE_DEBUGGING
#include <string>
#endif

class AZStateMachine;

class ${CLASS_NAME}
{
public:
  // State index
  // ${STATE_INDEXES_START}
  // ${STATE_INDEXES_END}
  
  // Input index
  // ${INPUT_INDEXES_START}
  // ${INPUT_INDEXES_END}
  
  // States
  // ${STATE_METHODS_DECLARATIONS_START}
  // ${STATE_METHODS_DECLARATIONS_END}
  
  // Transitions methods 
  // ${TRANSITION_METHODS_DECLARATIONS_START}
  // ${TRANSITION_METHODS_DECLARATIONS_END} 

#ifdef STATE_DEBUGGING
  // Debug accessor entries 
  // ${DEBUG_ACCESSORS_START}
  // ${DEBUG_ACCESSORS_END}
#endif
 
  // Init
  ${CLASS_NAME}();
  virtual ~${CLASS_NAME}();
  void AZExecuteCurrentState();
  void AZProcessInput(int input);
private:
  AZStateMachine* stateMachine;
  void AZInit();
  typedef bool(${CLASS_NAME}::*MethodIndex)();
  MethodIndex* mi;

#ifdef STATE_DEBUGGING
  // Debug input index entries 
  // ${DEBUG_INPUT_INDEXES_START}
  // ${DEBUG_INPUT_INDEXES_END}

  // Debug state index entries 
  // ${DEBUG_STATE_INDEXES_START}
  // ${DEBUG_STATE_INDEXES_END}
#endif
};

#endif
