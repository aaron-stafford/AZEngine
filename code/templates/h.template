//
// This file is generated by the AZEngine. Do not edit it. Changes will be overwritten.
//

#ifndef __${CLASS_NAME}__
#define __${CLASS_NAME}__

#include <string>

class AZStateMachine;

class ${CLASS_NAME}
{
public:
  // State index
  // ${STATE_INDEXES_START}
  // ${STATE_INDEXES_END}
  
  // Input index
  // ${INPUT_INDEXES_START}
  // ${INPUT_INDEXES_END}
  
  // States
  // ${STATE_METHODS_DECLARATIONS_START}
  // ${STATE_METHODS_DECLARATIONS_END}
  
  // Transitions methods 
  // ${TRANSITION_METHODS_DECLARATIONS_START}
  // ${TRANSITION_METHODS_DECLARATIONS_END} 

  // Debug accessor entries 
  // ${DEBUG_ACCESSORS_START}
  // ${DEBUG_ACCESSORS_END}

  // Member variables
  int m_CurrentState;
  
  // Init
  ${CLASS_NAME}();
  virtual ~${CLASS_NAME}();
  void AZExecuteCurrentState();
  void AZProcessInput(int input);
private:
  AZStateMachine* stateMachine;
  void AZInit();
  typedef bool(${CLASS_NAME}::*MethodIndex)();
  MethodIndex* mi;

  // Debug input index entries 
  // ${DEBUG_INPUT_INDEXES_START}
  // ${DEBUG_INPUT_INDEXES_END}

  // Debug state index entries 
  // ${DEBUG_STATE_INDEXES_START}
  // ${DEBUG_STATE_INDEXES_END}
};

#endif
